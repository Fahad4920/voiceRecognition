{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\voiceRecognition\\\\voiceRecognition\\\\src\\\\Dictaphone.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./styles.css\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Dictaphone = function Dictaphone() {\n  _s();\n  var _useSpeechRecognition = useSpeechRecognition(),\n    transcript = _useSpeechRecognition.transcript,\n    listening = _useSpeechRecognition.listening,\n    resetTranscript = _useSpeechRecognition.resetTranscript,\n    browserSupportsSpeechRecognition = _useSpeechRecognition.browserSupportsSpeechRecognition;\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Browser doesn't support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, _this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Microphone: \", listening ? \"on\" : \"off\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start\",\n      onClick: function onClick() {\n        return SpeechRecognition.startListening({\n          language: \"es-AR\"\n        });\n      },\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"stop\",\n      onClick: SpeechRecognition.stopListening,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset\",\n      onClick: resetTranscript,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: transcript\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, _this);\n};\n_s(Dictaphone, \"/JrEy1aqlTdmrm6qicjaxMZfbuE=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = Dictaphone;\nexport default Dictaphone;\nvar _c;\n$RefreshReg$(_c, \"Dictaphone\");","map":{"version":3,"names":["React","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","Dictaphone","_s","_useSpeechRecognition","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","className","onClick","startListening","language","stopListening","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/voiceRecognition/voiceRecognition/src/Dictaphone.tsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./styles.css\";\r\nimport SpeechRecognition, {\r\n  useSpeechRecognition\r\n} from \"react-speech-recognition\";\r\n\r\nconst Dictaphone = () => {\r\n  const {\r\n    transcript,\r\n    listening,\r\n    resetTranscript,\r\n    browserSupportsSpeechRecognition\r\n  } = useSpeechRecognition();\r\n\r\n  if (!browserSupportsSpeechRecognition) {\r\n    return <span>Browser doesn't support speech recognition.</span>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p>Microphone: {listening ? \"on\" : \"off\"}</p>\r\n      <button className=\"start\"\r\n        onClick={() => SpeechRecognition.startListening({ language: \"es-AR\" })}\r\n      >\r\n        Start\r\n      </button>\r\n      <button className=\"stop\"\r\n        onClick={SpeechRecognition.stopListening}\r\n      >\r\n        Stop\r\n      </button>\r\n      <button className=\"reset\"\r\n        onClick={resetTranscript}\r\n        >\r\n          Reset\r\n        </button>\r\n      <p>{transcript}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default Dictaphone;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AACrB,OAAOC,iBAAiB,IACtBC,oBAAoB,QACf,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EAAAC,EAAA;EACvB,IAAAC,qBAAA,GAKIL,oBAAoB,CAAC,CAAC;IAJxBM,UAAU,GAAAD,qBAAA,CAAVC,UAAU;IACVC,SAAS,GAAAF,qBAAA,CAATE,SAAS;IACTC,eAAe,GAAAH,qBAAA,CAAfG,eAAe;IACfC,gCAAgC,GAAAJ,qBAAA,CAAhCI,gCAAgC;EAGlC,IAAI,CAACA,gCAAgC,EAAE;IACrC,oBAAOP,OAAA;MAAAQ,QAAA,EAAM;IAA2C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAM,CAAC;EACjE;EAEA,oBACEb,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,GAAG,cAAY,EAACH,SAAS,GAAG,IAAI,GAAG,KAAK;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAI,CAAC,eAC7Cb,OAAA;MAAQc,SAAS,EAAC,OAAO;MACvBC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMlB,iBAAiB,CAACmB,cAAc,CAAC;UAAEC,QAAQ,EAAE;QAAQ,CAAC,CAAC;MAAA,CAAC;MAAAT,QAAA,EACxE;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAQ,CAAC,eACTb,OAAA;MAAQc,SAAS,EAAC,MAAM;MACtBC,OAAO,EAAElB,iBAAiB,CAACqB,aAAc;MAAAV,QAAA,EAC1C;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAQ,CAAC,eACTb,OAAA;MAAQc,SAAS,EAAC,OAAO;MACvBC,OAAO,EAAET,eAAgB;MAAAE,QAAA,EACxB;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAQ,CAAC,eACXb,OAAA;MAAAQ,QAAA,EAAIJ;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAI,CAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KAChB,CAAC;AAEV,CAAC;AAACX,EAAA,CAjCID,UAAU;EAAA,QAMVH,oBAAoB;AAAA;AAAAqB,EAAA,GANpBlB,UAAU;AAkChB,eAAeA,UAAU;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}